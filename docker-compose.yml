# GitPulse Docker Compose Configuration
name: gitpulse
version: '3.8'

services:
  # Django Application
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_NAME=gitpulse
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gitpulse
      - POSTGRES_USER=gitpulse
      - POSTGRES_PASSWORD=gitpulse_password
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
    depends_on:
      - mongodb
      - postgres
      - ollama
    command: ["./start.sh"]
    restart: unless-stopped

  # Django-Q Worker
  worker:
    build: .
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_NAME=gitpulse
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gitpulse
      - POSTGRES_USER=gitpulse
      - POSTGRES_PASSWORD=gitpulse_password
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
    depends_on:
      - mongodb
      - postgres
      - ollama
    command: ["./start-worker.sh"]
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=gitpulse
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gitpulse
      - POSTGRES_USER=gitpulse
      - POSTGRES_PASSWORD=gitpulse_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gitpulse -d gitpulse"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    command: >
      sh -c "
        ollama serve &
        sleep 10 &&
        ollama pull gemma3:4b &&
        wait
      "

volumes:
  mongodb_data:
    driver: local
  postgres_data:
    driver: local
  ollama_data:
    driver: local 